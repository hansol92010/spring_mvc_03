<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						https://www.springframework.org/schema/beans/spring-beans.xsd
						http://mybatis.org/schema/mybatis-spring
						http://mybatis.org/schema/mybatis-spring-1.2.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- <bean> : 객체를 생성하는 태그 -->
	
	<!-- HikariCP API -->
	<!-- HikariConfig (데이터베이스 접속 정보를 가지고 있다) -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/com?serverTimezone=UTC"/>
		<property name="username" value="com"/>
		<property name="password" value="com01"/>
	</bean>

	<!-- HikariDataSource (Connection POOL을 만드는 역할을 한다) -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<!-- 생성자를 통해 HikariDataSource 객체를 생성할 때, 생성자를 호출하면서  HikariConfig의 인스턴스를 참조한다 (HikariConfig의 id)-->
		<!--  destroy-method="close"란 connection 객체는 사용된 후에 자동으로 소멸(반납)된다는 의미이다 -->
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<!-- Mapper interface들을 메모리에 올리는 방법(scan) -->
	<mybatis-spring:scan base-package="kr.board.mapper"/>
	
	<!-- BoardMapper interface의 구현클래스 생성 = SqlSessionFactoryBean(SQL을 실행하는 API) -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>
